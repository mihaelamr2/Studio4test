<?xml version="1.0" encoding="UTF-8"?>
<operation id="8954c2ad-6478-4c6b-813f-666b27b85aa5">
  <descriptionCdata><![CDATA[8954c2ad-6478-4c6b-813f-666b27b85aa5.description=Scans for a specified HTML flag and returns everything between that flag and its closing flag. For example\:\nif flag is table then then everything between <table> and </table> is returned. The function does support nested tables, specifically if the html had\:\n<table>\nfoo\n<table>\nbar\n</table>\n</table>\n<table>\nmoo\n</table>\nThe inner table (bar) will NOT be gotten. But foo or moo can be, and if foo is gotten it will contain the sub-table bar.\n\ninputs\:\noccurrenceNumber - which flagged section to return, 1 \= first section, 2 \= second. 0 will return the entire document.\nflag - the html flag to parse on, in the above example this was table\nhtml - the html to parse.\n\nResponses\:\nsuccess - the specified flag was returned.\nfailure - The parse failed, the html does not have enough occurrences of flag.\n
]]></descriptionCdata>
  <annotation>8954c2ad-6478-4c6b-813f-666b27b85aa5.description</annotation>
  <name>HTML Parser</name>
  <categories/>
  <inputs>
    <userInputBinding id="4108cd33-00e7-4eb4-8ae1-cb0f4b952971">
      <annotation></annotation>
      <assignFromContext>false</assignFromContext>
      <assignToContext>false</assignToContext>
      <inputType>STRING</inputType>
      <isList>false</isList>
      <required>true</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>html</inputSymbol>
      <listDelimiter>,</listDelimiter>
      <record>false</record>
      <prompt></prompt>
      <isMultiSelect>false</isMultiSelect>
      <sourceDelimiter>|</sourceDelimiter>
    </userInputBinding>
    <userInputBinding id="2c760dea-367d-447a-aa70-a58656296dc1">
      <annotation></annotation>
      <assignFromContext>false</assignFromContext>
      <assignToContext>false</assignToContext>
      <inputType>STRING</inputType>
      <isList>false</isList>
      <required>true</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>occurrenceNumber</inputSymbol>
      <listDelimiter>,</listDelimiter>
      <record>false</record>
      <prompt></prompt>
      <isMultiSelect>false</isMultiSelect>
      <sourceDelimiter>|</sourceDelimiter>
    </userInputBinding>
    <userInputBinding id="0c6c91a1-e5b7-48fe-806a-d4935827e47d">
      <annotation></annotation>
      <assignFromContext>false</assignFromContext>
      <assignToContext>false</assignToContext>
      <inputType>STRING</inputType>
      <isList>false</isList>
      <required>true</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>flag</inputSymbol>
      <listDelimiter>,</listDelimiter>
      <record>false</record>
      <prompt></prompt>
      <isMultiSelect>false</isMultiSelect>
      <sourceDelimiter>|</sourceDelimiter>
    </userInputBinding>
    <staticBinding id="5c6fd8b6-a886-4846-bceb-0f1124ef0054">
      <annotation></annotation>
      <toContextKey></toContextKey>
      <fromContextKey></fromContextKey>
      <assignFromContext>false</assignFromContext>
      <assignToContext>false</assignToContext>
      <inputType>STRING</inputType>
      <recordKey></recordKey>
      <isList>false</isList>
      <required>false</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>Field_2</inputSymbol>
      <listDelimiter></listDelimiter>
      <value>${occurrenceNumber}</value>
      <record>false</record>
    </staticBinding>
    <staticBinding id="4b60ce2b-ca69-4e19-be59-459fee236cef">
      <annotation></annotation>
      <toContextKey></toContextKey>
      <fromContextKey></fromContextKey>
      <assignFromContext>false</assignFromContext>
      <assignToContext>false</assignToContext>
      <inputType>STRING</inputType>
      <recordKey></recordKey>
      <isList>false</isList>
      <required>false</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>Field_3</inputSymbol>
      <listDelimiter></listDelimiter>
      <value>${in3}</value>
      <record>false</record>
    </staticBinding>
    <staticBinding id="b8a11e09-0ae3-4fae-8e7f-5e6e47c7a372">
      <annotation></annotation>
      <toContextKey></toContextKey>
      <fromContextKey></fromContextKey>
      <assignFromContext>false</assignFromContext>
      <assignToContext>false</assignToContext>
      <inputType>STRING</inputType>
      <recordKey></recordKey>
      <isList>false</isList>
      <required>false</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>Field_4</inputSymbol>
      <listDelimiter></listDelimiter>
      <value>${in4}</value>
      <record>false</record>
    </staticBinding>
  </inputs>
  <scriptlet id="55ccc9ac-684e-4874-83c9-dc0d27d4916f">
    <annotation></annotation>
    <name>Operation HTML Parser (f9b1cead-cc35-4f37-9d8a-38f5dce28930)</name>
    <script>scriptletResponse = &quot;failure&quot;;
try{//var tables = html;//html.split(&quot;&lt;&quot;+flag);
var index = parseInt(occurrenceNumber);
var startFlag = &quot;&lt;&quot;+flag;
var endFlag = &quot;&lt;/&quot;+flag+&quot;&gt;&quot;;
while (html.length &gt; 0 &amp;&amp; index &gt;0){
	var subStart = html.indexOf(startFlag);
	if (subStart &lt;0)
		break;
	var accum = subStart;
	var end = getEnd(subStart+1);
	index --;	
	if (index == 0){
		subStart = html.indexOf(&quot;&gt;&quot;, subStart);
		html = html.substring(subStart + 1 , end);
	}
	else
		html = html.substring(end+(endFlag).length, html.length); 
}
if (html.length &lt;= 0){
	scriptletResponse = &quot;failure&quot;;
	scriptletResult = &quot;&quot;+html; 
}
else{
	scriptletResponse = &quot;success&quot;;
	scriptletResult = &quot;&quot;+html; 
}
}
catch (e){
scriptletResponse = &quot;failure&quot;;
scriptletResult = &quot;&quot;+e;
}

function getEnd(offset) {
	var end = html.indexOf(endFlag, offset);
	var recCheck = html.indexOf(startFlag, offset);
	while (recCheck &lt; end &amp;&amp; recCheck &gt;= 0 &amp;&amp; end &gt;=0){
		if (recCheck &gt; end)
			return end;
		else
			offset = getEnd(recCheck+1)+1; 
		recCheck = html.indexOf(startFlag, offset);
		end = html.indexOf(endFlag, offset);
	}
	if (end &gt; 0)
		return end
	else
		return html.length-1;
}</script>
    <type>RHINO</type>
  </scriptlet>
  <possibleResponses>
    <opResponse id="1c73d6eb-75a4-4250-aeb0-03d6a50f0e54">
      <annotation></annotation>
      <name>success</name>
      <isDefault>false</isDefault>
      <onFailure>false</onFailure>
      <type>RESOLVED</type>
      <matchRules/>
    </opResponse>
    <opResponse id="181a80a0-3756-4023-82f7-e5164e30046d">
      <annotation></annotation>
      <name>failure</name>
      <isDefault>true</isDefault>
      <onFailure>true</onFailure>
      <type>ERROR</type>
      <matchRules/>
    </opResponse>
  </possibleResponses>
  <availableResultExpressions/>
  <resultExpression id="30b50112-ad2f-45b3-855b-0abd9be90811">
    <annotation></annotation>
    <name>Field 1</name>
    <fieldName>Field_1</fieldName>
    <sourceType>RAWRESULT</sourceType>
    <filters/>
  </resultExpression>
  <iconSpec id="14e753df-8b6d-4091-b0c5-0389a93c48c2">
    <baseIcon>website.png</baseIcon>
    <basePath>Application/</basePath>
    <readOnly>false</readOnly>
    <layers>
      <iconSpec id="2f2b3f1b-1185-42da-a493-8c2214d1e12f">
        <baseIcon>view.png</baseIcon>
        <basePath>Annotations/</basePath>
        <readOnly>false</readOnly>
        <layers/>
      </iconSpec>
    </layers>
  </iconSpec>
  <opRef>
    <refId>ddd79f22-8b1e-4605-88d5-d912bb2da2b9</refId>
  </opRef>
  <fieldValues/>
  <groupAliasRef>
    <refId>5233030c-af46-432b-a682-b326ca6bf2ae</refId>
    <refName>RAS_Operator_Path</refName>
  </groupAliasRef>
  <overrideGroupAlias>${overrideJRAS}</overrideGroupAlias>
</operation>